<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AoPing&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aoping.github.io/"/>
  <updated>2017-11-01T14:58:32.300Z</updated>
  <id>https://aoping.github.io/</id>
  
  <author>
    <name>敖平</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>笔记</title>
    <link href="https://aoping.github.io/2017/11/01/notes/"/>
    <id>https://aoping.github.io/2017/11/01/notes/</id>
    <published>2017-11-01T02:57:49.000Z</published>
    <updated>2017-11-01T14:58:32.300Z</updated>
    
    <content type="html"><![CDATA[<ul><li>控制台输出到txt<br>C:\你输入的命令 &gt;output.txt</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;控制台输出到txt&lt;br&gt;C:\你输入的命令 &amp;gt;output.txt&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>node-npm</title>
    <link href="https://aoping.github.io/2017/10/31/node-npm/"/>
    <id>https://aoping.github.io/2017/10/31/node-npm/</id>
    <published>2017-10-31T06:58:14.000Z</published>
    <updated>2017-11-01T14:58:32.299Z</updated>
    
    <content type="html"><![CDATA[<ul><li>dotenv  把变量加载入process.env</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;dotenv  把变量加载入process.env&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="学习笔记" scheme="https://aoping.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="node npm" scheme="https://aoping.github.io/tags/node-npm/"/>
    
  </entry>
  
  <entry>
    <title>js-utils</title>
    <link href="https://aoping.github.io/2017/10/24/js-utils/"/>
    <id>https://aoping.github.io/2017/10/24/js-utils/</id>
    <published>2017-10-23T16:16:35.000Z</published>
    <updated>2017-10-23T16:20:51.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * js常用工具类</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 方法作用：【格式化时间】</span></div><div class="line"><span class="comment"> * 使用方法</span></div><div class="line"><span class="comment"> * 示例：</span></div><div class="line"><span class="comment"> *      使用方式一：</span></div><div class="line"><span class="comment"> *      var now = new Date();</span></div><div class="line"><span class="comment"> *      var nowStr = now.dateFormat("yyyy-MM-dd hh:mm:ss");</span></div><div class="line"><span class="comment"> *      使用方式二：</span></div><div class="line"><span class="comment"> *      new Date().dateFormat("yyyy年MM月dd日");</span></div><div class="line"><span class="comment"> *      new Date().dateFormat("MM/dd/yyyy");</span></div><div class="line"><span class="comment"> *      new Date().dateFormat("yyyyMMdd");</span></div><div class="line"><span class="comment"> *      new Date().dateFormat("yyyy-MM-dd hh:mm:ss");</span></div><div class="line"><span class="comment"> * @param format &#123;date&#125; 传入要格式化的日期类型</span></div><div class="line"><span class="comment"> * @returns &#123;2015-01-31 16:30:00&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="built_in">Date</span>.prototype.dateFormat = <span class="function"><span class="keyword">function</span> (<span class="params">format</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> o = &#123;</div><div class="line">        <span class="string">"M+"</span> : <span class="keyword">this</span>.getMonth()+<span class="number">1</span>, <span class="comment">//month</span></div><div class="line">        <span class="string">"d+"</span> : <span class="keyword">this</span>.getDate(), <span class="comment">//day</span></div><div class="line">        <span class="string">"h+"</span> : <span class="keyword">this</span>.getHours(), <span class="comment">//hour</span></div><div class="line">        <span class="string">"m+"</span> : <span class="keyword">this</span>.getMinutes(), <span class="comment">//minute</span></div><div class="line">        <span class="string">"s+"</span> : <span class="keyword">this</span>.getSeconds(), <span class="comment">//second</span></div><div class="line">        <span class="string">"q+"</span> : <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//quarter</span></div><div class="line">        <span class="string">"S"</span> : <span class="keyword">this</span>.getMilliseconds() <span class="comment">//millisecond</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(format)) &#123;</div><div class="line">        format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear()+<span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span>+ k +<span class="string">")"</span>).test(format)) &#123;</div><div class="line">            format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, <span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span> ? o[k] : (<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> format;</div><div class="line">&#125;</div><div class="line"><span class="comment">/***********************************************************************</span></div><div class="line"><span class="comment"> *                           日期时间工具类                            *</span></div><div class="line"><span class="comment"> *                     注：调用方式，deteUtil.方法名                   *</span></div><div class="line"><span class="comment"> * ********************************************************************/</span></div><div class="line"><span class="keyword">var</span> dateUtil = &#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 方法作用：【取传入日期是星期几】</span></div><div class="line"><span class="comment">     * 使用方法：dateUtil.nowFewWeeks(new Date());</span></div><div class="line"><span class="comment">     * @param date&#123;date&#125; 传入日期类型</span></div><div class="line"><span class="comment">     * @returns &#123;星期四，...&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    nowFewWeeks:<span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(date <span class="keyword">instanceof</span> <span class="built_in">Date</span>)&#123;</div><div class="line">            <span class="keyword">var</span> dayNames = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"星期天"</span>,<span class="string">"星期一"</span>,<span class="string">"星期二"</span>,<span class="string">"星期三"</span>,<span class="string">"星期四"</span>,<span class="string">"星期五"</span>,<span class="string">"星期六"</span>);</div><div class="line">            <span class="keyword">return</span> dayNames[date.getDay()];</div><div class="line">        &#125; <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"Param error,date type!"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 方法作用：【字符串转换成日期】</span></div><div class="line"><span class="comment">     * 使用方法：dateUtil.strTurnDate("2010-01-01");</span></div><div class="line"><span class="comment">     * @param str &#123;String&#125;字符串格式的日期，传入格式：yyyy-mm-dd(2015-01-31)</span></div><div class="line"><span class="comment">     * @return &#123;Date&#125;由字符串转换成的日期</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    strTurnDate:<span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span>   re   =   <span class="regexp">/^(\d&#123;4&#125;)\S(\d&#123;1,2&#125;)\S(\d&#123;1,2&#125;)$/</span>;</div><div class="line">        <span class="keyword">var</span>   dt;</div><div class="line">        <span class="keyword">if</span>   (re.test(str))&#123;</div><div class="line">            dt   =   <span class="keyword">new</span>   <span class="built_in">Date</span>(<span class="built_in">RegExp</span>.$<span class="number">1</span>,<span class="built_in">RegExp</span>.$<span class="number">2</span>   -   <span class="number">1</span>,<span class="built_in">RegExp</span>.$<span class="number">3</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> dt;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 方法作用：【计算2个日期之间的天数】</span></div><div class="line"><span class="comment">     * 传入格式：yyyy-mm-dd(2015-01-31)</span></div><div class="line"><span class="comment">     * 使用方法：dateUtil.dayMinus(startDate,endDate);</span></div><div class="line"><span class="comment">     * @startDate &#123;Date&#125;起始日期</span></div><div class="line"><span class="comment">     * @endDate &#123;Date&#125;结束日期</span></div><div class="line"><span class="comment">     * @return endDate - startDate的天数差</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    dayMinus:<span class="function"><span class="keyword">function</span>(<span class="params">startDate, endDate</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(startDate <span class="keyword">instanceof</span> <span class="built_in">Date</span> &amp;&amp; endDate <span class="keyword">instanceof</span> <span class="built_in">Date</span>)&#123;</div><div class="line">            <span class="keyword">var</span> days = <span class="built_in">Math</span>.floor((endDate-startDate)/(<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</div><div class="line">            <span class="keyword">return</span> days;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"Param error,date type!"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/***********************************************************************</span></div><div class="line"><span class="comment"> *                           加载工具类                                *</span></div><div class="line"><span class="comment"> *                     注：调用方式，loadUtil.方法名                   *</span></div><div class="line"><span class="comment"> * ********************************************************************/</span></div><div class="line"><span class="keyword">var</span> loadUtil = &#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 方法说明：【动态加载js文件css文件】</span></div><div class="line"><span class="comment">     * 使用方法：loadUtil.loadjscssfile("http://libs.baidu.com/jquery/1.9.1/jquery.js","js")</span></div><div class="line"><span class="comment">     * @param fileurl 文件路径，</span></div><div class="line"><span class="comment">     * @param filetype 文件类型，支持传入类型，js、css</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    loadjscssfile:<span class="function"><span class="keyword">function</span>(<span class="params">fileurl,filetype</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(filetype == <span class="string">"js"</span>)&#123;</div><div class="line">            <span class="keyword">var</span> fileref = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">            fileref.setAttribute(<span class="string">"type"</span>,<span class="string">"text/javascript"</span>);</div><div class="line">            fileref.setAttribute(<span class="string">"src"</span>,fileurl);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(filetype == <span class="string">"css"</span>)&#123;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> fileref = <span class="built_in">document</span>.createElement(<span class="string">'link'</span>);</div><div class="line">            fileref.setAttribute(<span class="string">"rel"</span>,<span class="string">"stylesheet"</span>);</div><div class="line">            fileref.setAttribute(<span class="string">"type"</span>,<span class="string">"text/css"</span>);</div><div class="line">            fileref.setAttribute(<span class="string">"href"</span>,fileurl);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> fileref != <span class="string">"undefined"</span>)&#123;</div><div class="line">            <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(fileref);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            alert(<span class="string">"loadjscssfile method error!"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/***********************************************************************</span></div><div class="line"><span class="comment"> *                           字符串操作工具类                          *</span></div><div class="line"><span class="comment"> *                     注：调用方式，strUtil.方法名                   *</span></div><div class="line"><span class="comment"> * ********************************************************************/</span></div><div class="line"><span class="keyword">var</span> strUtil = &#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 判断字符串是否为空</span></div><div class="line"><span class="comment">     * @param str 传入的字符串</span></div><div class="line"><span class="comment">     * @returns &#123;&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    isEmpty:<span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(str != <span class="literal">null</span> &amp;&amp; str.length &gt; <span class="number">0</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 判断两个字符串子否相同</span></div><div class="line"><span class="comment">     * @param str1</span></div><div class="line"><span class="comment">     * @param str2</span></div><div class="line"><span class="comment">     * @returns &#123;Boolean&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    isEquals:<span class="function"><span class="keyword">function</span>(<span class="params">str1,str2</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(str1==str2)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * 忽略大小写判断字符串是否相同</span></div><div class="line"><span class="comment">     * @param str1</span></div><div class="line"><span class="comment">     * @param str2</span></div><div class="line"><span class="comment">     * @returns &#123;Boolean&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    isEqualsIgnorecase:<span class="function"><span class="keyword">function</span>(<span class="params">str1,str2</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(str1.toUpperCase() == str2.toUpperCase())&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 判断是否是数字</span></div><div class="line"><span class="comment">     * @param value</span></div><div class="line"><span class="comment">     * @returns &#123;Boolean&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    isNum:<span class="function"><span class="keyword">function</span> (<span class="params">value</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>( value != <span class="literal">null</span> &amp;&amp; value.length&gt;<span class="number">0</span> &amp;&amp; <span class="built_in">isNaN</span>(value) == <span class="literal">false</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 判断是否是中文</span></div><div class="line"><span class="comment">     * @param str</span></div><div class="line"><span class="comment">     * @returns &#123;Boolean&#125;</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    isChine:<span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^([u4E00-u9FA5]|[uFE30-uFFA0])*$/</span>;</div><div class="line">        <span class="keyword">if</span>(reg.test(str))&#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git教程</title>
    <link href="https://aoping.github.io/2017/10/22/git-tutorial/"/>
    <id>https://aoping.github.io/2017/10/22/git-tutorial/</id>
    <published>2017-10-22T03:16:58.000Z</published>
    <updated>2017-10-22T03:40:19.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>Git – fatal: Unable to create ‘XXX/.git/index.lock’</strong></p><ul><li>在.git同级目录，执行rm -f .git/index.lock （或者rm -f git/index.lock）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Git – fatal: Unable to create ‘XXX/.git/index.lock’&lt;/s
      
    
    </summary>
    
      <category term="git" scheme="https://aoping.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://aoping.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="https://aoping.github.io/2017/10/18/algorithm-javascript/"/>
    <id>https://aoping.github.io/2017/10/18/algorithm-javascript/</id>
    <published>2017-10-18T06:41:26.000Z</published>
    <updated>2017-11-01T14:58:42.060Z</updated>
    
    <content type="html"><![CDATA[<p>javascript实现算法</p><a id="more"></a><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p>需求：在一个有序数组a中查找一个数n<br>算法：取中间键mid，比较a[mid]和n，n大就继续在右边查找，n小就在左边查找</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><h4 id="场景：-已知元素要求可以枚举"><a href="#场景：-已知元素要求可以枚举" class="headerlink" title="场景： 已知元素要求可以枚举"></a>场景： 已知元素要求可以枚举</h4><h4 id="算法：-初始化好空桶（值为0），再遍历数组数值放到对应的桶"><a href="#算法：-初始化好空桶（值为0），再遍历数组数值放到对应的桶" class="headerlink" title="算法： 初始化好空桶（值为0），再遍历数组数值放到对应的桶"></a>算法： 初始化好空桶（值为0），再遍历数组数值放到对应的桶</h4><h4 id="javascript实现"><a href="#javascript实现" class="headerlink" title="javascript实现"></a>javascript实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort</span>(<span class="params">a</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> arry = []</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i&lt;<span class="number">11</span>;i++) &#123;</div><div class="line">    arry[i] =<span class="number">0</span></div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i= <span class="number">0</span>;i&lt;a.length;i++) &#123;</div><div class="line">    arry[a[i]]++</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i= <span class="number">0</span>;i&lt;<span class="number">11</span>;i++) &#123;</div><div class="line">    <span class="keyword">if</span>(arry[i]!==<span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j= <span class="number">0</span>;j&lt;arry[i];j++) &#123;</div><div class="line">      <span class="built_in">console</span>.log(i)</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sort([<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>])</div></pre></td></tr></table></figure><h4 id="算法时间复杂度-O-M-N-m是桶的数量，n是要排序的数组大小"><a href="#算法时间复杂度-O-M-N-m是桶的数量，n是要排序的数组大小" class="headerlink" title="算法时间复杂度 O(M+N) m是桶的数量，n是要排序的数组大小"></a>算法时间复杂度 O(M+N) m是桶的数量，n是要排序的数组大小</h4><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>优点：快</li><li>缺点： 浪费空间</li></ul><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><h4 id="算法：每次比较两个相邻的元素，如果顺序错了就交换位置-第一次遍历：比较第1、2位，再比较2、3位，至n位，第二次遍历比较第1、2位，再比较2、3位，至n-1位-…此过程中遍历几次，最后几位就是排好序的"><a href="#算法：每次比较两个相邻的元素，如果顺序错了就交换位置-第一次遍历：比较第1、2位，再比较2、3位，至n位，第二次遍历比较第1、2位，再比较2、3位，至n-1位-…此过程中遍历几次，最后几位就是排好序的" class="headerlink" title="算法：每次比较两个相邻的元素，如果顺序错了就交换位置(第一次遍历：比较第1、2位，再比较2、3位，至n位，第二次遍历比较第1、2位，再比较2、3位，至n-1位,…此过程中遍历几次，最后几位就是排好序的)"></a>算法：每次比较两个相邻的元素，如果顺序错了就交换位置(第一次遍历：比较第1、2位，再比较2、3位，至n位，第二次遍历比较第1、2位，再比较2、3位，至n-1位,…此过程中遍历几次，最后几位就是排好序的)</h4><h4 id="javascript实现-1"><a href="#javascript实现-1" class="headerlink" title="javascript实现"></a>javascript实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort</span>(<span class="params">a</span>)</span>&#123;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;a.length-i<span class="number">-1</span>;j++)&#123;</div><div class="line">      <span class="keyword">if</span>(a[j]&lt;a[j+<span class="number">1</span>]) &#123;</div><div class="line">      <span class="keyword">let</span> tmp = a[j]</div><div class="line">      a[j] = a[j+<span class="number">1</span>]</div><div class="line">      a[j+<span class="number">1</span>] = tmp</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">console</span>.log(a)</div><div class="line">&#125;</div><div class="line"></div><div class="line">sort([<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>])</div></pre></td></tr></table></figure><h4 id="算法时间复杂度-O-n-2-，一般不用"><a href="#算法时间复杂度-O-n-2-，一般不用" class="headerlink" title="算法时间复杂度 O(n*2)，一般不用"></a>算法时间复杂度 O(n*2)，一般不用</h4><h4 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>缺点： 慢</li><li>优点： 节约空间（相对于桶排序）</li></ul><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><h4 id="算法：一个数组a-先随便找一个基准数-一般设start-0第一个设为k-a-start-，然后i从左到右查找第一个大于k的数a-i-，j从右到左找第一个小于k的数a-j-，如果i不大于j则交换两个数字继续遍历，遍历结束交换a-start-和a-j-这样位置j左边的都小于k-右边都大于k"><a href="#算法：一个数组a-先随便找一个基准数-一般设start-0第一个设为k-a-start-，然后i从左到右查找第一个大于k的数a-i-，j从右到左找第一个小于k的数a-j-，如果i不大于j则交换两个数字继续遍历，遍历结束交换a-start-和a-j-这样位置j左边的都小于k-右边都大于k" class="headerlink" title="算法：一个数组a,先随便找一个基准数,一般设start=0第一个设为k=a[start]，然后i从左到右查找第一个大于k的数a[i]，j从右到左找第一个小于k的数a[j]，如果i不大于j则交换两个数字继续遍历，遍历结束交换a[start]和a[j],这样位置j左边的都小于k,右边都大于k"></a>算法：一个数组a,先随便找一个基准数,一般设start=0第一个设为k=a[start]，然后i从左到右查找第一个大于k的数a[i]，j从右到左找第一个小于k的数a[j]，如果i不大于j则交换两个数字继续遍历，遍历结束交换a[start]和a[j],这样位置j左边的都小于k,右边都大于k</h4><p>接着位置j左右两边继续上诉操作</p><h4 id="javascript实现-2"><a href="#javascript实现-2" class="headerlink" title="javascript实现"></a>javascript实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure><p>在不同情况下使用不同的算法</p><h3 id="计数排序-基数排序-插入排序-归并排序-堆排序"><a href="#计数排序-基数排序-插入排序-归并排序-堆排序" class="headerlink" title="计数排序 基数排序 插入排序 归并排序 堆排序"></a>计数排序 基数排序 插入排序 归并排序 堆排序</h3><h2 id="队列-栈-链表"><a href="#队列-栈-链表" class="headerlink" title="队列 栈 链表"></a>队列 栈 链表</h2><h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><p>队列有三个基本元素： 一个数组 一个头 一个尾<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">struct queue &#123;</div><div class="line">  let data[100]; // 队列主体</div><div class="line">  let head; // 队首</div><div class="line">  let tail; // 队尾</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><h4 id="运用"><a href="#运用" class="headerlink" title="运用"></a>运用</h4><ul><li>判断是否是回文字符</li></ul><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><p>元素： 值、指向下一元素的指针</p><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><ol><li>最终结束条件</li><li>边界条件</li><li>遍历的情况<br>首先以一个未被访问过的顶点作为起始顶点，沿当前顶点的边走到未被访问过的顶点：当没有未被访问过的顶点时，则回到上一个顶点，继续试探访问别的顶点，直到所有顶点都被访问过。</li></ol><h3 id="广度优先搜索"><a href="#广度优先搜索" class="headerlink" title="广度优先搜索"></a>广度优先搜索</h3><p>用一个数组记录可以走的节点<br>另用一个数组记录下来已经遍历过的节点,再以此为出发点进行搜索</p><p>首先以一个未被访问过的顶点作为起始顶点，访问其所有相邻的顶点，然后对每个相邻的顶点，再访问它们相邻的未被访问过的顶点，知道所有顶点都被访问过，遍历结束</p><h2 id="dijkstra算法"><a href="#dijkstra算法" class="headerlink" title="dijkstra算法"></a>dijkstra算法</h2><p>计算某点到任意一点的最短距离，先可以直接到达的里选最短，再以此为起点重复上述步骤</p><h1 id="代表性算法"><a href="#代表性算法" class="headerlink" title="代表性算法"></a>代表性算法</h1><h2 id="专用于数论计算的算法"><a href="#专用于数论计算的算法" class="headerlink" title="专用于数论计算的算法"></a>专用于数论计算的算法</h2><ul><li>求解最大公约数的辗转算法</li><li>求解联立方程的高斯消元法</li><li>求解定积分近似值的梯形公式</li><li>计算质数的艾拉托斯尼筛法</li></ul><h2 id="排序-1"><a href="#排序-1" class="headerlink" title="排序"></a>排序</h2><ul><li>选择排序</li><li>冒泡排序</li><li>插入排序</li><li>希尔排序</li><li>归并排序</li><li>快速排序</li></ul><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul><li>线性搜索</li><li>二分搜索</li></ul><h2 id="查找子串"><a href="#查找子串" class="headerlink" title="查找子串"></a>查找子串</h2><ul><li>简单字符串搜索</li><li>KMP算法</li><li>BM算法</li></ul><h1 id="结构化编程思想"><a href="#结构化编程思想" class="headerlink" title="结构化编程思想"></a>结构化编程思想</h1><p>所有流程都可以用以下三种结构来组合</p><ul><li>顺序结构</li><li>选择结构</li><li>循环结构</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;javascript实现算法&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://aoping.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="algorithm javascript" scheme="https://aoping.github.io/tags/algorithm-javascript/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装使用Arcanist</title>
    <link href="https://aoping.github.io/2017/10/17/software-arcanist/"/>
    <id>https://aoping.github.io/2017/10/17/software-arcanist/</id>
    <published>2017-10-17T08:32:57.000Z</published>
    <updated>2017-10-17T15:01:42.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装php环境"><a href="#安装php环境" class="headerlink" title="安装php环境"></a>安装php环境</h2><p>可以参考 <a href="/2017/10/17/software-php/" title="点击这里查看这篇文章">点击这里查看这篇文章</a></p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>官网下载：<a href="https://git-for-windows.github.io/" target="_blank" rel="external">https://git-for-windows.github.io/</a><br>打开exe程序进行安装即可</p><a id="more"></a><h2 id="安装Arcanist-和-libphutil"><a href="#安装Arcanist-和-libphutil" class="headerlink" title="安装Arcanist 和 libphutil"></a>安装Arcanist 和 libphutil</h2><p>参考：<a href="https://secure.phabricator.com/book/phabricator/article/arcanist/#installing-arcanist" target="_blank" rel="external">https://secure.phabricator.com/book/phabricator/article/arcanist/#installing-arcanist</a><br>新建一个目录arcanist,在目录下打开git bash，使用下面的命令clone项目<br>git clone <a href="https://github.com/phacility/libphutil.git" target="_blank" rel="external">https://github.com/phacility/libphutil.git</a><br>git clone <a href="https://github.com/phacility/arcanist.git" target="_blank" rel="external">https://github.com/phacility/arcanist.git</a></p><p>配置Path环境变量： G:\arcanist\arcanist\bin;</p><h2 id="配置arc环境"><a href="#配置arc环境" class="headerlink" title="配置arc环境"></a>配置arc环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arc set-config default &lt;uri&gt; // uri替换成Phabricator地址，例：arc set-config default https://phabricator.example.com/</div></pre></td></tr></table></figure><h2 id="配置arc编辑器"><a href="#配置arc编辑器" class="headerlink" title="配置arc编辑器"></a>配置arc编辑器</h2><p>使用Arcanist时需要使用文本编辑器编辑大块的文本，不能使用微软自带的NotePad，有以下Windows平台的编辑器可供选择：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Notepad++</div><div class="line">$ arc set-config editor &quot;\&quot;C:\Program Files (x86)\Notepad++\notepad++.exe\&quot; -multiInst -nosession&quot;</div><div class="line">此命令是配置Notepad++的，需要你更改安装目录</div><div class="line"></div><div class="line">vim</div><div class="line">$ arc set-config editor &quot;\&quot;C:\Program Files (x86)\Git\share\vim\vim73\vim.exe\&quot;&quot;</div><div class="line">此命令是配置vim的，需要你更改安装目录</div><div class="line"></div><div class="line">GitPad</div><div class="line">$ arc set-config editor &quot;\&quot;C:\Users\yourusername\AppData\Roaming\GitPad\GitPad.exe\&quot;&quot;</div><div class="line">此命令是配置GitPad的，需要你更改安装目录</div><div class="line"></div><div class="line">Sublime Text</div><div class="line">$ arc set-config editor &quot;\&quot;C:\Program Files\Sublime Text 2\sublime_text.exe\&quot; -w -n&quot;</div><div class="line">此命令是配置Sublime Text的，需要你更改安装目录</div></pre></td></tr></table></figure></p><h2 id="配置token"><a href="#配置token" class="headerlink" title="配置token"></a>配置token</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arc install-certificate</div></pre></td></tr></table></figure><p>打开提示中的地址，登录复制token就可以了</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.jianshu.com/p/b21c93d41803" target="_blank" rel="external">http://www.jianshu.com/p/b21c93d41803</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装php环境&quot;&gt;&lt;a href=&quot;#安装php环境&quot; class=&quot;headerlink&quot; title=&quot;安装php环境&quot;&gt;&lt;/a&gt;安装php环境&lt;/h2&gt;&lt;p&gt;可以参考 &lt;a href=&quot;/2017/10/17/software-php/&quot; title=&quot;点击这里查看这篇文章&quot;&gt;点击这里查看这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装git&quot;&gt;&lt;a href=&quot;#安装git&quot; class=&quot;headerlink&quot; title=&quot;安装git&quot;&gt;&lt;/a&gt;安装git&lt;/h2&gt;&lt;p&gt;官网下载：&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git-for-windows.github.io/&lt;/a&gt;&lt;br&gt;打开exe程序进行安装即可&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://aoping.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Arcanist" scheme="https://aoping.github.io/tags/Arcanist/"/>
    
  </entry>
  
  <entry>
    <title>php安装</title>
    <link href="https://aoping.github.io/2017/10/17/software-php/"/>
    <id>https://aoping.github.io/2017/10/17/software-php/</id>
    <published>2017-10-17T06:26:19.000Z</published>
    <updated>2017-10-17T15:01:42.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows下PHP环境的搭建"><a href="#windows下PHP环境的搭建" class="headerlink" title="windows下PHP环境的搭建:"></a>windows下PHP环境的搭建:</h2><p><a href="https://segmentfault.com/a/1190000003409708" target="_blank" rel="external">https://segmentfault.com/a/1190000003409708</a></p><a id="more"></a><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><h4 id="执行httpd-k-install-发生-could-not-bind-to-address-0-0-0-0-80"><a href="#执行httpd-k-install-发生-could-not-bind-to-address-0-0-0-0-80" class="headerlink" title="执行httpd -k install 发生 could not bind to address 0.0.0.0:80"></a>执行httpd -k install 发生 could not bind to address 0.0.0.0:80</h4><p>这是因为iis占用了80端口<br>可以在管理员权限下cmd执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Windows 7/Vista</div><div class="line">net stop was /y</div><div class="line">or XP:</div><div class="line">net stop iisadmin /y</div></pre></td></tr></table></figure></p><p><a href="https://www.sitepoint.com/unblock-port-80-on-windows-run-apache/" target="_blank" rel="external">https://www.sitepoint.com/unblock-port-80-on-windows-run-apache/</a></p><h2 id="在windows下的CLI模式下如何运行php文件"><a href="#在windows下的CLI模式下如何运行php文件" class="headerlink" title="在windows下的CLI模式下如何运行php文件"></a>在windows下的CLI模式下如何运行php文件</h2><p><a href="https://jingyan.baidu.com/article/da1091fb096c97027849d68e.html" target="_blank" rel="external">https://jingyan.baidu.com/article/da1091fb096c97027849d68e.html</a></p><h3 id="错误-1"><a href="#错误-1" class="headerlink" title="错误"></a>错误</h3><h4 id="search-path-c-usr-share-snmp-mibs-cannot-find-module-ip-mib-at-line-0-in-none"><a href="#search-path-c-usr-share-snmp-mibs-cannot-find-module-ip-mib-at-line-0-in-none" class="headerlink" title="search path c /usr/share/snmp/mibs cannot find module (ip-mib) at line 0 in (none)"></a>search path c /usr/share/snmp/mibs cannot find module (ip-mib) at line 0 in (none)</h4><p><a href="https://stackoverflow.com/questions/16467712/php-snmp-cannot-find-module" target="_blank" rel="external">https://stackoverflow.com/questions/16467712/php-snmp-cannot-find-module</a></p><p>  Open your php.ini and add some magical semicolon at line that look like:<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">extension=php_snmp.dll</div></pre></td></tr></table></figure></p><p>  It should look like:<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;extension=php_snmp.dll</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;windows下PHP环境的搭建&quot;&gt;&lt;a href=&quot;#windows下PHP环境的搭建&quot; class=&quot;headerlink&quot; title=&quot;windows下PHP环境的搭建:&quot;&gt;&lt;/a&gt;windows下PHP环境的搭建:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000003409708&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/a/1190000003409708&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="https://aoping.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="software php" scheme="https://aoping.github.io/tags/software-php/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu使用技巧</title>
    <link href="https://aoping.github.io/2017/10/15/ubuntu-keyword/"/>
    <id>https://aoping.github.io/2017/10/15/ubuntu-keyword/</id>
    <published>2017-10-15T01:25:37.000Z</published>
    <updated>2017-10-22T04:13:44.300Z</updated>
    
    <content type="html"><![CDATA[<p><strong>分屏显示</strong></p><ul><li>ctrl+Windowskey(Super key)+上下左右</li></ul><p><strong>多窗口分屏式终端–Terminatgongzuoquor</strong></p><ul><li>可在同一屏打开多个窗口，安装如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install terminator</div></pre></td></tr></table></figure></li></ul><p><img src="1.png" alt="1.png"><br><strong>显示桌面/开启工作区</strong></p><ul><li>依次打开系统设置，外观，行为，在中间有开启工作区和添加“显示桌面”图标到启动器，勾选即可</li><li>alt+ctrl+方向箭头 切换工作区<a id="more"></a></li></ul><p><strong>显示隐藏文件</strong></p><ul><li>ctrl+h</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;分屏显示&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ctrl+Windowskey(Super key)+上下左右&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多窗口分屏式终端–Terminatgongzuoquor&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可在同一屏打开多个窗口，安装如下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install terminator&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;1.png&quot; alt=&quot;1.png&quot;&gt;&lt;br&gt;&lt;strong&gt;显示桌面/开启工作区&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依次打开系统设置，外观，行为，在中间有开启工作区和添加“显示桌面”图标到启动器，勾选即可&lt;/li&gt;
&lt;li&gt;alt+ctrl+方向箭头 切换工作区
    
    </summary>
    
      <category term="ubuntu" scheme="https://aoping.github.io/categories/ubuntu/"/>
    
    
      <category term="ubuntu 使用技巧" scheme="https://aoping.github.io/tags/ubuntu-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>express知识点</title>
    <link href="https://aoping.github.io/2017/10/15/node-express/"/>
    <id>https://aoping.github.io/2017/10/15/node-express/</id>
    <published>2017-10-15T00:50:13.000Z</published>
    <updated>2017-10-15T01:42:12.304Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装express"><a href="#安装express" class="headerlink" title="安装express"></a>安装express</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i express -g</div></pre></td></tr></table></figure><h2 id="express生成器"><a href="#express生成器" class="headerlink" title="express生成器"></a>express生成器</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i express-generator -g</div></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">express -h // 帮助</div><div class="line">express myapp //生成app</div></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd myapp</div><div class="line">npm i</div></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DEBUG=myapp npm start  // mac or linux</div><div class="line">set DEBUG=myapp &amp; npm start // windows</div></pre></td></tr></table></figure><h2 id="express架构"><a href="#express架构" class="headerlink" title="express架构"></a>express架构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;)</div><div class="line">var app = express()</div><div class="line"></div><div class="line">// view engine setup</div><div class="line">app.set(&apos;views&apos;, path.join(__dirname, &apos;views&apos;));</div><div class="line">app.set(&apos;view engine&apos;, &apos;jade&apos;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装express&quot;&gt;&lt;a href=&quot;#安装express&quot; class=&quot;headerlink&quot; title=&quot;安装express&quot;&gt;&lt;/a&gt;安装express&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="node" scheme="https://aoping.github.io/categories/node/"/>
    
    
      <category term="node express 学习笔记" scheme="https://aoping.github.io/tags/node-express-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>es6-async</title>
    <link href="https://aoping.github.io/2017/10/14/es6-async/"/>
    <id>https://aoping.github.io/2017/10/14/es6-async/</id>
    <published>2017-10-14T01:55:55.000Z</published>
    <updated>2017-10-14T14:45:14.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="回调地狱"><a href="#回调地狱" class="headerlink" title="回调地狱"></a>回调地狱</h2><p>在es5时代，js只能用callback来进行异步操作，这不仅不宜阅读，而且极难调试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var fs = require(&apos;fs&apos;);</div><div class="line">fs.readFile(&apos;a.json&apos;, function(error, data)&#123;</div><div class="line">  if (error) console.log(error);</div><div class="line">  else &#123;</div><div class="line">    fs.readFile(&apos;b.json&apos;, function(error, data)&#123;</div><div class="line">      if (error) console.log(error);</div><div class="line">      else &#123;</div><div class="line">        console.log(data);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><a id="more"></a><p>Promise的出现解决了这个问题</p><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>es6给我们带来了Promise,这极有效的避免了回调地狱<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">var fs = require(&apos;fs&apos;);</div><div class="line"></div><div class="line">var readFile = function (fileName)&#123;</div><div class="line">  return new Promise(function (resolve, reject)&#123;</div><div class="line">    fs.readFile(fileName, function(error, data)&#123;</div><div class="line">      if (error) reject(error);</div><div class="line">      resolve(data);</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">readFile(a.json).then(es =&gt; &#123;</div><div class="line">  readFile(b.json).then(es =&gt; &#123;</div><div class="line">    console.log(a,b)</div><div class="line">  &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p><p>大家可以试一下如果用callback,这段代码如何写<br>但是，也许大家发现了如果要再读取多个问题，也是非常繁琐，这就是generator要解决的问题</p><h2 id="generator-yeild-co"><a href="#generator-yeild-co" class="headerlink" title="generator/yeild/co"></a>generator/yeild/co</h2><p>Generator 函数是协程在 ES6 的实现，最大特点就是可以交出函数的执行权（即暂停执行）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var fs = require(&apos;fs&apos;);</div><div class="line"></div><div class="line">var readFile = function (fileName)&#123;</div><div class="line">  return new Promise(function (resolve, reject)&#123;</div><div class="line">    fs.readFile(fileName, function(error, data)&#123;</div><div class="line">      if (error) reject(error);</div><div class="line">      resolve(data);</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var gen = function* ()&#123;</div><div class="line">  var f1 = yield readFile(&apos;/etc/fstab&apos;);</div><div class="line">  var f2 = yield readFile(&apos;/etc/shells&apos;);</div><div class="line">  console.log(f1.toString());</div><div class="line">  console.log(f2.toString());</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>也许大家发现了也不好阅读，下面就是今天的主角async</p><h2 id="async-await"><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h2><p>async/await是generator的语法糖,是es7提案<br>async返回一个Promise对象，使用then获取返回值，可以用try…catch获取异常<br>await正如字面意思等待的意思，后面可以是任意的表达式(不用关心它是不是异步)<br>await只能在asnyc内<br>希望多个请求并发执行时，用Promise.all</p><p>async的优点<br>内置执行器、更好的语义、更广的适用性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">function sleep(second) &#123;</div><div class="line">    return new Promise((resolve, reject) =&gt; &#123;</div><div class="line">        setTimeout(() =&gt; &#123;</div><div class="line">            resolve(&apos;request done! &apos; + Math.random());</div><div class="line">        &#125;, second);</div><div class="line">    &#125;)</div><div class="line">&#125;</div><div class="line">async function correctDemo() &#123;</div><div class="line">    let p1 = sleep(1000);</div><div class="line">    let p2 = sleep(1000);</div><div class="line">    let p3 = sleep(1000);</div><div class="line">    await Promise.all([p1, p2, p3]);</div><div class="line">    console.log(&apos;clear the loading~&apos;);</div><div class="line">&#125;</div><div class="line">correctDemo();// clear the loading~</div></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.ruanyifeng.com/blog/2015/05/async.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/05/async.html</a><br><a href="https://juejin.im/entry/59df22c16fb9a0452340df42" target="_blank" rel="external">https://juejin.im/entry/59df22c16fb9a0452340df42</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;回调地狱&quot;&gt;&lt;a href=&quot;#回调地狱&quot; class=&quot;headerlink&quot; title=&quot;回调地狱&quot;&gt;&lt;/a&gt;回调地狱&lt;/h2&gt;&lt;p&gt;在es5时代，js只能用callback来进行异步操作，这不仅不宜阅读，而且极难调试。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var fs = require(&amp;apos;fs&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fs.readFile(&amp;apos;a.json&amp;apos;, function(error, data)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if (error) console.log(error);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  else &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    fs.readFile(&amp;apos;b.json&amp;apos;, function(error, data)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      if (error) console.log(error);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      else &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        console.log(data);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="es6" scheme="https://aoping.github.io/categories/es6/"/>
    
    
      <category term="es6 异步" scheme="https://aoping.github.io/tags/es6-%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>wechat-subscriptions</title>
    <link href="https://aoping.github.io/2017/10/13/wechat-subscriptions/"/>
    <id>https://aoping.github.io/2017/10/13/wechat-subscriptions/</id>
    <published>2017-10-13T11:46:13.000Z</published>
    <updated>2017-10-14T14:45:14.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p>node微信开发用wechat框架</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h1&gt;&lt;p&gt;node微信开发用wechat框架&lt;/p&gt;

      
    
    </summary>
    
      <category term="微信" scheme="https://aoping.github.io/categories/%E5%BE%AE%E4%BF%A1/"/>
    
    
      <category term="微信 公众号" scheme="https://aoping.github.io/tags/%E5%BE%AE%E4%BF%A1-%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>css规范</title>
    <link href="https://aoping.github.io/2017/10/12/css-standard/"/>
    <id>https://aoping.github.io/2017/10/12/css-standard/</id>
    <published>2017-10-12T02:20:29.000Z</published>
    <updated>2017-10-14T14:45:14.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css书写顺序"><a href="#css书写顺序" class="headerlink" title="css书写顺序"></a>css书写顺序</h1><p>1.位置属性(position, top, right, z-index, display, float等)<br>2.大小(width, height, padding, margin)<br>3.文字系列(font, line-height, letter-spacing, color- text-align等)<br>4.背景(background, border等)<br>5.其他(animation, transition等)</p><a id="more"></a><h1 id="常用的CSS命名规则"><a href="#常用的CSS命名规则" class="headerlink" title="常用的CSS命名规则"></a>常用的CSS命名规则</h1><p>头：header<br>内容：content/container<br>尾：footer<br>导航：nav<br>侧栏：sidebar<br>栏目：column<br>页面外围控制整体佈局宽度：wrapper<br>左右中：left right center<br>登录条：loginbar<br>标志：logo<br>广告：banner<br>页面主体：main<br>热点：hot<br>新闻：news<br>下载：download<br>子导航：subnav<br>菜单：menu<br>子菜单：submenu<br>搜索：search<br>友情链接：friendlink<br>页脚：footer<br>版权：copyright<br>滚动：scroll<br>内容：content<br>标签：tags<br>文章列表：list<br>提示信息：msg<br>小技巧：tips<br>栏目标题：title<br>加入：joinus<br>指南：guide<br>服务：service<br>注册：regsiter<br>状态：status<br>投票：vote<br>合作伙伴：partner</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.shejidaren.com/css-written-specifications.html" target="_blank" rel="external">http://www.shejidaren.com/css-written-specifications.html</a><br><a href="http://cherryblog.site/developing-guideline.html" target="_blank" rel="external">http://cherryblog.site/developing-guideline.html</a><br><a href="https://segmentfault.com/a/1190000011390896#articleHeader22" target="_blank" rel="external">https://segmentfault.com/a/1190000011390896#articleHeader22</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;css书写顺序&quot;&gt;&lt;a href=&quot;#css书写顺序&quot; class=&quot;headerlink&quot; title=&quot;css书写顺序&quot;&gt;&lt;/a&gt;css书写顺序&lt;/h1&gt;&lt;p&gt;1.位置属性(position, top, right, z-index, display, float等)&lt;br&gt;2.大小(width, height, padding, margin)&lt;br&gt;3.文字系列(font, line-height, letter-spacing, color- text-align等)&lt;br&gt;4.背景(background, border等)&lt;br&gt;5.其他(animation, transition等)&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="https://aoping.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://aoping.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>不同浏览器间书签共享</title>
    <link href="https://aoping.github.io/2017/10/11/software-bookmark/"/>
    <id>https://aoping.github.io/2017/10/11/software-bookmark/</id>
    <published>2017-10-11T02:05:21.000Z</published>
    <updated>2017-10-14T14:45:14.847Z</updated>
    
    <content type="html"><![CDATA[<p>作为一名前端开发，总要和很多不同浏览器打交道，自己也有保存书签过段时间再看的习惯，但书签保存在不同浏览器中，怎么实现书签共享呢？<br>今天给大家介绍的就是xMarks</p><a id="more"></a><p>xMarks可以跨浏览器同步,支持当前主流的几个浏览器Firefox，Chrome，IE等</p><p>因为墙的原因，大家可能访问不了Chrome网上应用店，下面以360浏览器为例</p><p>firefox可以参考<br><a href="http://blog.csdn.net/arackethis/article/details/45312255" target="_blank" rel="external">http://blog.csdn.net/arackethis/article/details/45312255</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一名前端开发，总要和很多不同浏览器打交道，自己也有保存书签过段时间再看的习惯，但书签保存在不同浏览器中，怎么实现书签共享呢？&lt;br&gt;今天给大家介绍的就是xMarks&lt;/p&gt;
    
    </summary>
    
      <category term="浏览器" scheme="https://aoping.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
      <category term="浏览器 书签" scheme="https://aoping.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8-%E4%B9%A6%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>keystone学习</title>
    <link href="https://aoping.github.io/2017/10/10/node-keystone/"/>
    <id>https://aoping.github.io/2017/10/10/node-keystone/</id>
    <published>2017-10-10T09:20:04.000Z</published>
    <updated>2017-10-14T14:45:14.829Z</updated>
    
    <content type="html"><![CDATA[<h2 id="express"><a href="#express" class="headerlink" title="express"></a>express</h2><a id="more"></a><h2 id="mongodb-mongoose"><a href="#mongodb-mongoose" class="headerlink" title="mongodb mongoose"></a>mongodb mongoose</h2><h3 id="schema-的域-虚拟域-方法-静态域-前置钩子-后置钩子"><a href="#schema-的域-虚拟域-方法-静态域-前置钩子-后置钩子" class="headerlink" title="schema 的域 虚拟域 方法 静态域 前置钩子 后置钩子"></a>schema 的域 虚拟域 方法 静态域 前置钩子 后置钩子</h3><ul><li><p>域（理解为字段,如title就是域）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Post.add(&#123;</div><div class="line">    title: &#123; type: String, required: true &#125;,</div><div class="line">    state: &#123; type: Types.Select, options: &apos;draft, published, archived&apos;, default: &apos;draft&apos; &#125;,</div><div class="line">    author: &#123; type: Types.Relationship, ref: &apos;User&apos; &#125;,</div><div class="line">    createdAt: &#123; type: Date, default: Date.now &#125;,</div><div class="line">    publishedAt: Date,</div><div class="line">    image: &#123; type: Types.CloudinaryImage &#125;,</div><div class="line">    content: &#123;</div><div class="line">        brief: &#123; type: Types.Html, wysiwyg: true, height: 150 &#125;,</div><div class="line">        extended: &#123; type: Types.Html, wysiwyg: true, height: 400 &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li><li><p>虚拟域(该属性不写入数据库,用于计算属性)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">User.schema.virtual(&apos;canAccessKeystone&apos;).get(function () &#123;</div><div class="line">return this.isAdmin;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line"> PersonSchema.virtual(&apos;name.full&apos;).set(function(name)&#123;</div><div class="line">      var split = name.split(&apos; &apos;);</div><div class="line">      this.name.first = split[0];</div><div class="line">      this.name.last = split[1];</div><div class="line">    &#125;);</div></pre></td></tr></table></figure></li><li><p>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Post.schema.methods.isPublished = function() &#123;</div><div class="line">    return this.state == &apos;published&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>静态域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></li><li><p>前置钩子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Post.schema.pre(&apos;save&apos;, function(next) &#123;</div><div class="line">    if (this.isModified(&apos;state&apos;) &amp;&amp; this.isPublished() &amp;&amp; !this.publishedAt) &#123;</div><div class="line">        this.publishedAt = new Date();</div><div class="line">    &#125;</div><div class="line">    next();</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li><li><p>后置钩子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>数据类型    域类型<br>String    Text<br>Number    Number<br>Date    DateTime<br>Boolean    Boolean</p><h3 id="域参数（增加域时可以使用的参数）"><a href="#域参数（增加域时可以使用的参数）" class="headerlink" title="域参数（增加域时可以使用的参数）"></a>域参数（增加域时可以使用的参数）</h3><p>label String    每个域的标签都是由域路径生成的；设置这个参数会覆盖默认值。<br>required Boolean    在条目保存前验证这个域是有值的(还会传给mongoose并强制使用数据库索引)。<br>initial Boolean    让这个域出现在管理界面中的创建条目表单中。<br>noedit Boolean    在管理界面中将这个域渲染为只读域。<br>note String    在管理界面中跟着域显示。<br>hidden Boolean    如果设为true，则该域在管理界面中一直是隐藏域。<br>collapse Boolean    该域没有值时在管理界面中显示一个+ 添加链接。当noedit也被设为true时，该域没值时则完全隐藏。<br>dependsOn Object    只有对象中指定的路径跟条目的当前数据匹配时才会显示 你可以在每个路径上用数组对准多个值。</p><h2 id="pug"><a href="#pug" class="headerlink" title="pug"></a>pug</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;express&quot;&gt;&lt;a href=&quot;#express&quot; class=&quot;headerlink&quot; title=&quot;express&quot;&gt;&lt;/a&gt;express&lt;/h2&gt;
    
    </summary>
    
      <category term="keystone" scheme="https://aoping.github.io/categories/keystone/"/>
    
    
      <category term="keystone" scheme="https://aoping.github.io/tags/keystone/"/>
    
  </entry>
  
  <entry>
    <title>node版本管理</title>
    <link href="https://aoping.github.io/2017/10/10/node-manager/"/>
    <id>https://aoping.github.io/2017/10/10/node-manager/</id>
    <published>2017-10-10T06:22:47.000Z</published>
    <updated>2017-10-17T15:01:42.622Z</updated>
    
    <content type="html"><![CDATA[<p>Node版本管理器有nvm n nvmw nvm-windows等，但这些对操作系统都有要求，下面根据不同操作系统简单介绍一下</p><a id="more"></a><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="nvmw"><a href="#nvmw" class="headerlink" title="nvmw"></a>nvmw</h2><p><a href="https://github.com/hakobera/nvmw" target="_blank" rel="external">https://github.com/hakobera/nvmw</a></p><h2 id="nvm-windows-推荐"><a href="#nvm-windows-推荐" class="headerlink" title="nvm-windows(推荐)"></a>nvm-windows(推荐)</h2><p>参考链接：<a href="https://littlebaozi.github.io/2017/08/30/nvm-nodejs/" target="_blank" rel="external">https://littlebaozi.github.io/2017/08/30/nvm-nodejs/</a><br>github地址：<a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="external">https://github.com/coreybutler/nvm-windows</a></p><h3 id="安装nvm-windows"><a href="#安装nvm-windows" class="headerlink" title="安装nvm-windows"></a>安装nvm-windows</h3><ul><li>如果之前安装过node, 需要删除相应的安装目录，避免有影响<br>主要检查以下两个目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Program Files\nodejs</div><div class="line">C:\Users&lt;user&gt;\AppData\Roaming\npm</div></pre></td></tr></table></figure><ul><li>下载发布包<a href="https://github.com/coreybutler/nvm-windows/releases，下载nvm-setup.zip，解压后点击exe文件，进行安装即可" target="_blank" rel="external">https://github.com/coreybutler/nvm-windows/releases，下载nvm-setup.zip，解压后点击exe文件，进行安装即可</a></li></ul><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install 6.11.4</div></pre></td></tr></table></figure></p><h3 id="使用相应版本的node"><a href="#使用相应版本的node" class="headerlink" title="使用相应版本的node"></a>使用相应版本的node</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm use 6.11.4</div></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nvm list  查看安装的node版本</div><div class="line">nvm uninstall &lt;version&gt; 卸载</div><div class="line">nvm version 查看nvm的版本</div></pre></td></tr></table></figure><h3 id="配置npm"><a href="#配置npm" class="headerlink" title="配置npm"></a>配置npm</h3><ul><li>执行命令，执行成功在<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\&lt;你的用户名&gt;</div></pre></td></tr></table></figure></li></ul><p>下会生成.npmrc文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm config set prefix &quot;G:\software\npm-global&quot;</div></pre></td></tr></table></figure><ul><li>再次是配置环境变量,<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">设置——系统——关于——系统信息——高级程序设置——环境变量——xxx用户的变量</div></pre></td></tr></table></figure></li></ul><p>如果你之前安装过npm, 则将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\你的用户名\AppData\Roaming\npm</div></pre></td></tr></table></figure></p><p> 改为<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">G:\software\npm-global</div></pre></td></tr></table></figure></p><p>反之直接添加PATH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">G:\software\npm-global</div></pre></td></tr></table></figure></p><h3 id="安装nrm"><a href="#安装nrm" class="headerlink" title="安装nrm"></a>安装nrm</h3><p>nrm（npm registry manager ）npm的镜像源管理工具   <a href="https://github.com/Pana/nrm" target="_blank" rel="external">https://github.com/Pana/nrm</a></p><ul><li><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g nrm</div></pre></td></tr></table></figure></li><li><p>其他命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nrm ls    展示所有可切换的镜像地址</div><div class="line">nrm use cnpm    切换到cnpm</div></pre></td></tr></table></figure></li></ul><h3 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h3><p>如果你安装了nrm，可以忽略<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line">npm install -g cnpm --registry=http://r.cnpmjs.org</div></pre></td></tr></table></figure></p><h3 id="全局安装模块"><a href="#全局安装模块" class="headerlink" title="全局安装模块"></a>全局安装模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>任何全局npm模块在您已安装的各种版本的node.js之间不共享</p><h1 id="linux-ubuntu"><a href="#linux-ubuntu" class="headerlink" title="linux(ubuntu)"></a>linux(ubuntu)</h1><h2 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h2><p>install using curl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl https://raw.githubusercontent.com/creationix/nvm/v0.20.0/install.sh | bash</div></pre></td></tr></table></figure><p>install using wget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.20.0/install.sh | bash</div></pre></td></tr></table></figure><h2 id="n"><a href="#n" class="headerlink" title="n"></a>n</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Node版本管理器有nvm n nvmw nvm-windows等，但这些对操作系统都有要求，下面根据不同操作系统简单介绍一下&lt;/p&gt;
    
    </summary>
    
      <category term="node" scheme="https://aoping.github.io/categories/node/"/>
    
    
      <category term="node" scheme="https://aoping.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>weex</title>
    <link href="https://aoping.github.io/2017/10/08/weex/"/>
    <id>https://aoping.github.io/2017/10/08/weex/</id>
    <published>2017-10-08T03:35:28.000Z</published>
    <updated>2017-10-14T14:45:14.848Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ui"><a href="#ui" class="headerlink" title="ui"></a>ui</h2><p>weex-ui <a href="https://github.com/alibaba/weex-ui" target="_blank" rel="external">https://github.com/alibaba/weex-ui</a></p><p>bui <a href="http://dev.bingocc.com/buiweex/docs/" target="_blank" rel="external">http://dev.bingocc.com/buiweex/docs/</a></p><a id="more"></a><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>nat <a href="http://natjs.com/" target="_blank" rel="external">http://natjs.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ui&quot;&gt;&lt;a href=&quot;#ui&quot; class=&quot;headerlink&quot; title=&quot;ui&quot;&gt;&lt;/a&gt;ui&lt;/h2&gt;&lt;p&gt;weex-ui &lt;a href=&quot;https://github.com/alibaba/weex-ui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/alibaba/weex-ui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;bui &lt;a href=&quot;http://dev.bingocc.com/buiweex/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dev.bingocc.com/buiweex/docs/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="weex" scheme="https://aoping.github.io/categories/weex/"/>
    
    
      <category term="weex" scheme="https://aoping.github.io/tags/weex/"/>
    
  </entry>
  
  <entry>
    <title>倍速播放器</title>
    <link href="https://aoping.github.io/2017/10/07/software-player/"/>
    <id>https://aoping.github.io/2017/10/07/software-player/</id>
    <published>2017-10-07T02:03:41.000Z</published>
    <updated>2017-10-14T14:45:14.844Z</updated>
    
    <content type="html"><![CDATA[<p>相信大家在看视频学习的时候一定有多倍速播放的需求，今天就给大家推荐几款播放器</p><a id="more"></a><h2 id="potplayer"><a href="#potplayer" class="headerlink" title="potplayer"></a>potplayer</h2><p>windows下推荐使用</p><h2 id="smplayer"><a href="#smplayer" class="headerlink" title="smplayer"></a>smplayer</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Linux下推荐使用</p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="http://www.smplayer.info/en/downloads" target="_blank" rel="external">http://www.smplayer.info/en/downloads</a></p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>不要散乱地记忆smplayer的快捷键. 要分类别的来记忆快捷键: 主要有audio, play, video:</p><p>audio, 是设置声音的快捷键:<br>9, 0, 分别增加/减小音量, m表示mute.</p><p>play: 设置设置放映的快捷键:<br>主要有: left/right: 10s为单位; up/down: 1min; pageup/pgdn: 10min ; 播放速度的快捷键: [, ], {, }, 分别是正负0.1 , 50%和2倍. 暂停: space, 如果创建了playlists, 可以用&lt; 和 &gt; 来进行上一首/下一首切换.</p><p>video, 是指窗口大小/视频本身的大小 设置:<br>窗口大小: f: 全屏, ctrl+1, 100%, ctrl+2, 200%, ctrl+d则是双倍和原始大小进行切换. (这个ctrl_1, 是一个固定大小, 就是不管你把窗口拖放到什么尺寸, 只要按crl+1, 都会显示到那个固定的大小)<br>视频本身的大小: e: 放大, w缩小. e是指expand, 扩展, 放大, w: 为什么是缩小呢? 因为根据&gt; &lt;, (), [], {} , 这些成对的, 紧挨着的按键的布局来看. 左边的表示缩小, 右边的表示放大.</p><p>s: 是截屏screenshots.</p><p>不定期更新～～</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>播放器smplayer的各种键盘快捷键 <a href="http://www.cnblogs.com/bkylee/p/6795295.html" target="_blank" rel="external">http://www.cnblogs.com/bkylee/p/6795295.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信大家在看视频学习的时候一定有多倍速播放的需求，今天就给大家推荐几款播放器&lt;/p&gt;
    
    </summary>
    
      <category term="软件" scheme="https://aoping.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="播放器 倍速" scheme="https://aoping.github.io/tags/%E6%92%AD%E6%94%BE%E5%99%A8-%E5%80%8D%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>代理 翻墙软件</title>
    <link href="https://aoping.github.io/2017/10/07/software-proxy/"/>
    <id>https://aoping.github.io/2017/10/07/software-proxy/</id>
    <published>2017-10-07T01:22:15.000Z</published>
    <updated>2017-10-14T14:45:14.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h1><ul><li>ngrok</li></ul><p>地址： <a href="https://www.ngrok.cc/" target="_blank" rel="external">https://www.ngrok.cc/</a></p><ul><li>tunnel.mobi</li></ul><ul><li>utralhook</li></ul><ul><li>qq浏览器 微信插件（only mac and win）</li></ul><h1 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h1><ul><li>蓝灯（Lantern）</li></ul><p><a href="https://github.com/getlantern/lantern" target="_blank" rel="external">https://github.com/getlantern/lantern</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;代理&quot;&gt;&lt;a href=&quot;#代理&quot; class=&quot;headerlink&quot; title=&quot;代理&quot;&gt;&lt;/a&gt;代理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;ngrok&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;地址： &lt;a href=&quot;https://www.ngrok.cc/&quot; target=&quot;
      
    
    </summary>
    
      <category term="软件" scheme="https://aoping.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="软件 代理 翻墙" scheme="https://aoping.github.io/tags/%E8%BD%AF%E4%BB%B6-%E4%BB%A3%E7%90%86-%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu常用软件安装</title>
    <link href="https://aoping.github.io/2017/10/06/ubuntu-software/"/>
    <id>https://aoping.github.io/2017/10/06/ubuntu-software/</id>
    <published>2017-10-06T10:02:45.000Z</published>
    <updated>2017-11-01T16:53:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/shidaping/article/details/52218278" target="_blank" rel="external">http://blog.csdn.net/shidaping/article/details/52218278</a><br><a href="http://blog.csdn.net/tao_627/article/details/52635691" target="_blank" rel="external">http://blog.csdn.net/tao_627/article/details/52635691</a></p><p>安装微信<br><a href="http://blog.csdn.net/ch593030323/article/details/53571807" target="_blank" rel="external">http://blog.csdn.net/ch593030323/article/details/53571807</a></p><a id="more"></a><p>安装qq(2017版)<br><a href="http://blog.csdn.net/xs18952904/article/details/74931089?locationNum=2&amp;fps=1" target="_blank" rel="external">http://blog.csdn.net/xs18952904/article/details/74931089?locationNum=2&amp;fps=1</a><br><a href="http://blog.csdn.net/ysy950803/article/details/52958538" target="_blank" rel="external">http://blog.csdn.net/ysy950803/article/details/52958538</a></p><p>安装迅雷<br><a href="http://blog.csdn.net/zhuyucheng123/article/details/51147550" target="_blank" rel="external">http://blog.csdn.net/zhuyucheng123/article/details/51147550</a></p><p>登录激活就可以使用了</p><p>安装mongodb<br><a href="http://blog.csdn.net/flyfish111222/article/details/51886787" target="_blank" rel="external">http://blog.csdn.net/flyfish111222/article/details/51886787</a><br><a href="http://www.cnblogs.com/weschen/p/7395667.html（选择此方法）" target="_blank" rel="external">http://www.cnblogs.com/weschen/p/7395667.html（选择此方法）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mongodb // 安装mongodb</div><div class="line">service mongodb start</div><div class="line">service mongodb stop</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo systemctl enable mongod    //设置开机启动mongodb服务</div><div class="line">sudo service mongod start   //启动服务</div><div class="line">systemctl status mongod</div></pre></td></tr></table></figure><ul><li>MongoError: Authentication failed.<br><a href="http://cnodejs.org/topic/5617d80941ceb58c4f8e6e37" target="_blank" rel="external">http://cnodejs.org/topic/5617d80941ceb58c4f8e6e37</a></li></ul><p>安装robomongo<br><a href="http://blog.csdn.net/cristal_tina/article/details/53634209" target="_blank" rel="external">http://blog.csdn.net/cristal_tina/article/details/53634209</a></p><p>安装gitbook<br><a href="http://blog.csdn.net/qq_26437925/article/details/52959733?locationNum=8&amp;fps=1" target="_blank" rel="external">http://blog.csdn.net/qq_26437925/article/details/52959733?locationNum=8&amp;fps=1</a></p><p>安装wps<br><strong>下载地址</strong><br> <a href="http://wps-community.org/download.html" target="_blank" rel="external">http://wps-community.org/download.html</a><br><strong>字体缺失下载地址</strong></p><p>启动WPS for Linux后，出现提示”系统缺失字体” 。</p><p>出现提示的原因是因为WPS for Linux没有自带windows的字体，只要在Linux系统中加载字体即可。</p><p>具体操作步骤如下：</p><ol><li>下载缺失的字体文件，然后复制到Linux系统中的/usr/share/fonts文件夹中。</li></ol><p>国外下载地址：<a href="https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip" target="_blank" rel="external">https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip</a></p><p>国内下载地址：<a href="https://pan.baidu.com/s/1eS6xIzo" target="_blank" rel="external">https://pan.baidu.com/s/1eS6xIzo</a></p><p>（上述数据来源网络，侵删）</p><p>下载完成后，解压并进入目录中，继续执行：</p><p>sudo cp * /usr/share/fonts</p><ol><li>执行以下命令,生成字体的索引信息：</li></ol><p>sudo mkfontscale</p><p>sudo mkfontdir</p><ol><li>运行fc-cache命令更新字体缓存。</li></ol><p>sudo fc-cache</p><ol><li>重启wps即可，字体缺失的提示不再出现。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/shidaping/article/details/52218278&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/shidaping/article/details/52218278&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/tao_627/article/details/52635691&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/tao_627/article/details/52635691&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装微信&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/ch593030323/article/details/53571807&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/ch593030323/article/details/53571807&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ubuntu" scheme="https://aoping.github.io/categories/ubuntu/"/>
    
    
      <category term="ubuntu 软件安装" scheme="https://aoping.github.io/tags/ubuntu-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>html5</title>
    <link href="https://aoping.github.io/2017/10/03/html5/"/>
    <id>https://aoping.github.io/2017/10/03/html5/</id>
    <published>2017-10-03T00:54:20.000Z</published>
    <updated>2017-10-14T14:45:14.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本节主要记录html5的相关知识"><a href="#本节主要记录html5的相关知识" class="headerlink" title="本节主要记录html5的相关知识"></a>本节主要记录html5的相关知识</h1><a id="more"></a><h2 id="推出的理由"><a href="#推出的理由" class="headerlink" title="推出的理由"></a>推出的理由</h2><ul><li>web浏览器之间兼容性很低</li><li>文档结构不够明确</li><li>web应用程序功能收到限制</li></ul><h2 id="语法的改变"><a href="#语法的改变" class="headerlink" title="语法的改变"></a>语法的改变</h2><ul><li>内容类型</li><li>doctype声明</li><li>指定字符编码</li><li>可以省略标记的yuans</li><li>省略引号</li><li>boolean值可以省略</li></ul><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><h3 id="新增的结构元素"><a href="#新增的结构元素" class="headerlink" title="新增的结构元素"></a>新增的结构元素</h3><p>section article aside header hgroup footer nav figure</p><h4 id="主题结构元素"><a href="#主题结构元素" class="headerlink" title="主题结构元素"></a>主题结构元素</h4><ul><li>article<br>  有header p footer<br>  可以嵌套<br>  特殊的section</li><li>section<br>  需要设置样式时用div<br>  有标题内容h1才使用section<br>  可以嵌套</li><li><p>nav<br>  应用场景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;nav&gt;</div><div class="line">    &lt;h2&gt;xxx&lt;/h2&gt;</div><div class="line">    &lt;ul&gt;</div><div class="line">        &lt;li&gt;&lt;a&gt;&lt;/a&gt;&lt;/li&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">&lt;/nav&gt;</div></pre></td></tr></table></figure></li><li><p>aside<br>  表示当前页面或文章的附属信息部分，相关引用、侧边栏、广告、导航条等</p></li><li><p>time与微格式</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;time datetime=&quot;2015-10-10&quot; pubdate&gt;2015-10-10&lt;/time&gt;</div></pre></td></tr></table></figure></li></ul><h4 id="非主体结构元素"><a href="#非主体结构元素" class="headerlink" title="非主体结构元素"></a>非主体结构元素</h4><ul><li>header footer hgroup<br>  hgroup包裹h1-h6,表示子标题</li><li>address</li></ul><h4 id="表单新增元素"><a href="#表单新增元素" class="headerlink" title="表单新增元素"></a>表单新增元素</h4><p>#### </p><h3 id="网页编排规则"><a href="#网页编排规则" class="headerlink" title="网页编排规则"></a>网页编排规则</h3><ul><li>显示编排内容区域块</li><li>显示编排内容区域块</li><li>标题分级</li><li>不同区块可以使用相同标题</li></ul><h3 id="新增的其他元素"><a href="#新增的其他元素" class="headerlink" title="新增的其他元素"></a>新增的其他元素</h3><p>video audio embed mark progress meter time canvas</p><h3 id="新增的input类型"><a href="#新增的input类型" class="headerlink" title="新增的input类型"></a>新增的input类型</h3><p>email url number range DatePickers</p><h3 id="废除的元素"><a href="#废除的元素" class="headerlink" title="废除的元素"></a>废除的元素</h3><ul><li>能使用css代替的元素 basefont big center font s tt u等</li><li>不再使用frame框架</li><li>只有部分浏览器支持的元素</li><li>其他被废除的元素</li></ul><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><h3 id="新增的属性"><a href="#新增的属性" class="headerlink" title="新增的属性"></a>新增的属性</h3><h4 id="表单内元素的form属性"><a href="#表单内元素的form属性" class="headerlink" title="表单内元素的form属性"></a>表单内元素的form属性</h4><h3 id="废除的属性"><a href="#废除的属性" class="headerlink" title="废除的属性"></a>废除的属性</h3><h3 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h3><p>contentEditable 可以继承<br>designMode只能在js里编辑<br>hidden<br>spellcheck 对input textarea检查<br>tabindex 设置为-1（可以通过js获取到）</p><h1 id="新增api"><a href="#新增api" class="headerlink" title="新增api"></a>新增api</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;本节主要记录html5的相关知识&quot;&gt;&lt;a href=&quot;#本节主要记录html5的相关知识&quot; class=&quot;headerlink&quot; title=&quot;本节主要记录html5的相关知识&quot;&gt;&lt;/a&gt;本节主要记录html5的相关知识&lt;/h1&gt;
    
    </summary>
    
      <category term="html" scheme="https://aoping.github.io/categories/html/"/>
    
    
      <category term="html html5" scheme="https://aoping.github.io/tags/html-html5/"/>
    
  </entry>
  
</feed>
